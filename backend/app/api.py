from fastapi import FastAPI, HTTPException\nfrom fastapi.middleware.cors import CORSMiddleware\nfrom app.models import Jogo, Jogador, CartaVagao, GerenciadorDeBaralho, Cor\n\napp = FastAPI()\n\n# CORS middleware\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=["*"],  # Allow all origins for Next.js frontend\n    allow_credentials=True,\n    allow_methods=["*"],\n    allow_headers=["*"],\n)\n\n# In-memory storage for active games\nactive_games = {}\n\n@app.post("/games")\nasync def create_game(game: Jogo):\n    # Logic to create a game\n    active_games[game.id] = game\n    return game\n\n@app.get("/games/{game_id}")\nasync def get_game_state(game_id: str):\n    game = active_games.get(game_id)\n    if not game:\n        raise HTTPException(status_code=404, detail="Game not found")\n    return game\n\n@app.get("/games/{game_id}/player-cards/{player_id}")\nasync def get_player_cards(game_id: str, player_id: str):\n    game = active_games.get(game_id)\n    if not game:\n        raise HTTPException(status_code=404, detail="Game not found")\n    player = game.get_player(player_id)\n    return player.cards\n\n@app.post("/games/{game_id}/buy-cards")\nasync def buy_cards(game_id: str, player_id: str, card_ids: list):\n    game = active_games.get(game_id)\n    if not game:\n        raise HTTPException(status_code=404, detail="Game not found")\n    player = game.get_player(player_id)\n    # Logic to buy cards\n    return {"message": "Cards bought successfully"}\n\n@app.get("/baralho-info")\nasync def get_baralho_info():\n    # Logic to get baralho info\n    return GerenciadorDeBaralho.get_info()\n\n# To run the application with Uvicorn, use the command below:\n# uvicorn app.api:app --host 0.0.0.0 --port 8000\n